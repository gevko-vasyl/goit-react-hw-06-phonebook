{"version":3,"sources":["redux/reducer.js","redux/store.js","components/Container/Container.jsx","redux/actions.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["contactList","createReducer","id","name","number","state","payload","filter","phonebookReducer","combineReducers","contact","phonebookPersistConfig","key","storage","blacklist","persisteReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","Container","children","className","addContacts","createAction","nanoid","deleteContacts","changeFilter","getContacts","getFilter","getVisibleContacts","contacts","optimizedFilter","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","onSubmit","e","preventDefault","repeatName","reduce","acc","repeatNumber","alert","type","value","pattern","title","required","onChange","target","Filter","event","ContactItem","onClick","onDelete","ContactList","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.87fa882e.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst initState = [\n  {\n    id: \"id-1\",\n    name: \"Rosie Simpson\",\n    number: \"459-12-56\",\n  },\n  {\n    id: \"id-2\",\n    name: \"Hermione Kline\",\n    number: \"443-89-12\",\n  },\n  {\n    id: \"id-3\",\n    name: \"Eden Clements\",\n    number: \"645-17-79\",\n  },\n  {\n    id: \"id-4\",\n    name: \"Annie Copeland\",\n    number: \"227-91-26\",\n  },\n];\n\nconst contactList = createReducer(initState, {\n  \"contacts/add\": (state, { payload }) => [...state, payload],\n  \"contacts/delete\": (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  \"filter/value\": (state, { payload }) => payload,\n});\n\nexport const phonebookReducer = combineReducers({\n  contact: contactList,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { phonebookReducer } from \"./reducer\";\n\nconst phonebookPersistConfig = {\n  key: \"contact\",\n  storage,\n  blacklist: [\"filter\"],\n};\nconst persisteReducer = persistReducer(\n  phonebookPersistConfig,\n  phonebookReducer\n);\nexport const store = configureStore({\n  reducer: persisteReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\nexport const persistor = persistStore(store);\n","import \"./Container.scss\";\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"Container\">\n      <h1 className=\"Container__title\">Phonebook</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import { createAction } from \"@reduxjs/toolkit\";\n// import { v4 as uuid } from 'uuid';\n// const contactId = uuid();\nimport { nanoid } from \"nanoid\";\n\nexport const addContacts = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: nanoid(),\n    name,\n    number,\n  },\n}));\nexport const deleteContacts = createAction(\"contacts/delete\");\nexport const changeFilter = createAction(\"filter/value\");\n","export const getContacts = (state) => state.contact;\nexport const getFilter = (state) => state.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const optimizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(optimizedFilter)\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContacts } from \"../../redux/actions\";\nimport { getContacts } from \"../../redux/selectors\";\nimport \"./ContactForm.scss\";\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = (name, number) => dispatch(addContacts(name, number));\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const handleNumberChange = (e) => {\n    const number = e.target.value;\n    setNumber(number);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const repeatName = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      []\n    );\n    const repeatNumber = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      []\n    );\n\n    if (repeatName.includes(name) || repeatNumber.includes(number)) {\n      alert(`${name} ${number} is already created`);\n      return;\n    }\n\n    if (name === \"\" || number === \"\") {\n      alert(`Enter data`);\n      return;\n    }\n\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"Form__button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { changeFilter } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport \"./Filter.scss\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\n  return (\n    <div className=\"Filter \">\n      <h2 className=\"Filter__contacts-title\">Contacts</h2>\n      <h3 className=\"Filter__title\">Find contacts by name</h3>\n      <input\n        className=\"Filter__input\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../redux/actions\";\n\nexport default function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const onDelete = (id) => dispatch(deleteContacts(id));\n  return (\n    <li className=\"ContactItem\">\n      <p className=\"ContactItem__text\">{name}</p>\n      <p className=\"ContactItem__text\">{number}</p>\n      <button className=\"ContactListItem__button\" onClick={() => onDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nimport \"./ContactList.scss\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <>\n      <ul className=\"ContactList\">\n        {contacts.map(({ name, number, id }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n","import Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}